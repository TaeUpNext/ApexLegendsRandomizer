# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/Volumes/Buffalo_SSD/Programming/Python/ApexLegendsRandomizer-master/ApexPickEmChooseEm.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import random






class Ui_MainWindow(object):
        def setupUi(self, MainWindow):
                MainWindow.setObjectName("MainWindow")
                MainWindow.resize(800, 815)
                MainWindow.setAutoFillBackground(False)
                MainWindow.setStyleSheet("background-color: rgb(0, 0, 0);")
                self.centralwidget = QtWidgets.QWidget(MainWindow)
                self.centralwidget.setObjectName("centralwidget")
                self.legendLabel = QtWidgets.QLabel(self.centralwidget)
                self.legendLabel.setGeometry(QtCore.QRect(40, 110, 221, 51))
                font = QtGui.QFont()
                font.setFamily("Aldo the Apache")
                font.setPointSize(36)
                self.legendLabel.setFont(font)
                self.legendLabel.setStyleSheet("color: rgb(255, 255, 255);")
                self.legendLabel.setAlignment(QtCore.Qt.AlignCenter)
                self.legendLabel.setObjectName("legendLabel")
                self.mainLabel = QtWidgets.QLabel(self.centralwidget)
                self.mainLabel.setGeometry(QtCore.QRect(110, 20, 571, 61))
                font = QtGui.QFont()
                font.setFamily("Chalkduster")
                font.setPointSize(36)
                self.mainLabel.setFont(font)
                self.mainLabel.setAutoFillBackground(False)
                self.mainLabel.setStyleSheet("color: rgb(255, 255, 255);")
                self.mainLabel.setAlignment(QtCore.Qt.AlignCenter)
                self.mainLabel.setObjectName("mainLabel")
                self.backupLegend = QtWidgets.QLabel(self.centralwidget)
                self.backupLegend.setGeometry(QtCore.QRect(50, 200, 221, 51))
                font = QtGui.QFont()
                font.setFamily("Aldo the Apache")
                font.setPointSize(36)
                self.backupLegend.setFont(font)
                self.backupLegend.setStyleSheet("color: rgb(255, 255, 255);")
                self.backupLegend.setAlignment(QtCore.Qt.AlignCenter)
                self.backupLegend.setObjectName("backupLegend")
                self.backupLegend2 = QtWidgets.QLabel(self.centralwidget)
                self.backupLegend2.setGeometry(QtCore.QRect(40, 290, 261, 51))
                font = QtGui.QFont()
                font.setFamily("Aldo the Apache")
                font.setPointSize(36)
                self.backupLegend2.setFont(font)
                self.backupLegend2.setStyleSheet("color: rgb(255, 255, 255);")
                self.backupLegend2.setAlignment(QtCore.Qt.AlignCenter)
                self.backupLegend2.setObjectName("backupLegend2")
                self.weapon1 = QtWidgets.QLabel(self.centralwidget)
                self.weapon1.setGeometry(QtCore.QRect(30, 380, 221, 51))
                font = QtGui.QFont()
                font.setFamily("Aldo the Apache")
                font.setPointSize(36)
                self.weapon1.setFont(font)
                self.weapon1.setStyleSheet("color: rgb(255, 255, 255);")
                self.weapon1.setAlignment(QtCore.Qt.AlignCenter)
                self.weapon1.setObjectName("weapon1")
                self.weapon2 = QtWidgets.QLabel(self.centralwidget)
                self.weapon2.setGeometry(QtCore.QRect(30, 470, 221, 51))
                font = QtGui.QFont()
                font.setFamily("Aldo the Apache")
                font.setPointSize(36)
                self.weapon2.setFont(font)
                self.weapon2.setStyleSheet("color: rgb(255, 255, 255);")
                self.weapon2.setAlignment(QtCore.Qt.AlignCenter)
                self.weapon2.setObjectName("weapon2")
                self.legendButton = QtWidgets.QPushButton(self.centralwidget)
                self.legendButton.setGeometry(QtCore.QRect(20, 650, 211, 91))
                font = QtGui.QFont()
                font.setFamily("Aldo the Apache")
                font.setPointSize(24)
                self.legendButton.setFont(font)
                self.legendButton.setAutoFillBackground(False)
                self.legendButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
        "color: rgb(0, 0, 0);")
                self.legendButton.setObjectName("legendButton")
                self.weaponButton = QtWidgets.QPushButton(self.centralwidget)
                self.weaponButton.setGeometry(QtCore.QRect(300, 650, 211, 91))
                font = QtGui.QFont()
                font.setFamily("Aldo the Apache")
                font.setPointSize(24)
                self.weaponButton.setFont(font)
                self.weaponButton.setAutoFillBackground(False)
                self.weaponButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
        "color: rgb(0, 0, 0);")
                self.weaponButton.setObjectName("weaponButton")
                self.generateBoth = QtWidgets.QPushButton(self.centralwidget)
                self.generateBoth.setGeometry(QtCore.QRect(570, 650, 211, 91))
                font = QtGui.QFont()
                font.setFamily("Aldo the Apache")
                font.setPointSize(24)
                self.generateBoth.setFont(font)
                self.generateBoth.setAutoFillBackground(False)
                self.generateBoth.setStyleSheet("background-color: rgb(255, 255, 255);\n"
        "color: rgb(0, 0, 0);")
                self.generateBoth.setObjectName("generateBoth")
                self.legendShowcase = QtWidgets.QLabel(self.centralwidget)
                self.legendShowcase.setGeometry(QtCore.QRect(220, 110, 541, 41))
                font = QtGui.QFont()
                font.setFamily("Marker Felt")
                font.setPointSize(36)
                font.setItalic(True)
                self.legendShowcase.setFont(font)
                self.legendShowcase.setAutoFillBackground(False)
                self.legendShowcase.setStyleSheet("background-color: rgb(255, 255, 255);")
                self.legendShowcase.setText("")
                self.legendShowcase.setTextFormat(QtCore.Qt.PlainText)
                self.legendShowcase.setAlignment(QtCore.Qt.AlignCenter)
                self.legendShowcase.setObjectName("legendShowcase")
                self.legendShowcase_2 = QtWidgets.QLabel(self.centralwidget)
                self.legendShowcase_2.setGeometry(QtCore.QRect(280, 200, 481, 41))
                font = QtGui.QFont()
                font.setFamily("Marker Felt")
                font.setPointSize(36)
                font.setItalic(True)
                self.legendShowcase_2.setFont(font)
                self.legendShowcase_2.setAutoFillBackground(False)
                self.legendShowcase_2.setStyleSheet("background-color:rgb(255, 255, 255)")
                self.legendShowcase_2.setText("")
                self.legendShowcase_2.setTextFormat(QtCore.Qt.PlainText)
                self.legendShowcase_2.setAlignment(QtCore.Qt.AlignCenter)
                self.legendShowcase_2.setObjectName("legendShowcase_2")
                self.legendShowcase_3 = QtWidgets.QLabel(self.centralwidget)
                self.legendShowcase_3.setGeometry(QtCore.QRect(310, 290, 451, 41))
                font = QtGui.QFont()
                font.setFamily("Marker Felt")
                font.setPointSize(36)
                font.setItalic(True)
                self.legendShowcase_3.setFont(font)
                self.legendShowcase_3.setAutoFillBackground(False)
                self.legendShowcase_3.setStyleSheet("background-color:rgb(255, 255, 255)")
                self.legendShowcase_3.setText("")
                self.legendShowcase_3.setTextFormat(QtCore.Qt.PlainText)
                self.legendShowcase_3.setAlignment(QtCore.Qt.AlignCenter)
                self.legendShowcase_3.setObjectName("legendShowcase_3")
                self.weaponShowcase = QtWidgets.QLabel(self.centralwidget)
                self.weaponShowcase.setGeometry(QtCore.QRect(230, 380, 531, 41))
                font = QtGui.QFont()
                font.setFamily("Marker Felt")
                font.setPointSize(36)
                font.setItalic(True)
                self.weaponShowcase.setFont(font)
                self.weaponShowcase.setAutoFillBackground(False)
                self.weaponShowcase.setStyleSheet("background-color:rgb(255, 255, 255)")
                self.weaponShowcase.setText("")
                self.weaponShowcase.setTextFormat(QtCore.Qt.PlainText)
                self.weaponShowcase.setAlignment(QtCore.Qt.AlignCenter)
                self.weaponShowcase.setObjectName("weaponShowcase")
                self.weaponShowcase2 = QtWidgets.QLabel(self.centralwidget)
                self.weaponShowcase2.setGeometry(QtCore.QRect(230, 470, 531, 41))
                font = QtGui.QFont()
                font.setFamily("Marker Felt")
                font.setPointSize(36)
                font.setItalic(True)
                self.weaponShowcase2.setFont(font)
                self.weaponShowcase2.setAutoFillBackground(False)
                self.weaponShowcase2.setStyleSheet("background-color:rgb(255, 255, 255)")
                self.weaponShowcase2.setText("")
                self.weaponShowcase2.setTextFormat(QtCore.Qt.PlainText)
                self.weaponShowcase2.setAlignment(QtCore.Qt.AlignCenter)
                self.weaponShowcase2.setObjectName("weaponShowcase2")
                self.weapon2_2 = QtWidgets.QLabel(self.centralwidget)
                self.weapon2_2.setGeometry(QtCore.QRect(40, 550, 221, 51))
                font = QtGui.QFont()
                font.setFamily("Aldo the Apache")
                font.setPointSize(36)
                self.weapon2_2.setFont(font)
                self.weapon2_2.setStyleSheet("color: rgb(255, 255, 255);")
                self.weapon2_2.setAlignment(QtCore.Qt.AlignCenter)
                self.weapon2_2.setObjectName("weapon2_2")
                self.weaponShowcase3 = QtWidgets.QLabel(self.centralwidget)
                self.weaponShowcase3.setGeometry(QtCore.QRect(280, 550, 481, 41))
                font = QtGui.QFont()
                font.setFamily("Marker Felt")
                font.setPointSize(36)
                font.setItalic(True)
                self.weaponShowcase3.setFont(font)
                self.weaponShowcase3.setAutoFillBackground(False)
                self.weaponShowcase3.setStyleSheet("background-color:rgb(255, 255, 255)")
                self.weaponShowcase3.setText("")
                self.weaponShowcase3.setTextFormat(QtCore.Qt.PlainText)
                self.weaponShowcase3.setAlignment(QtCore.Qt.AlignCenter)
                self.weaponShowcase3.setObjectName("weaponShowcase3")
                MainWindow.setCentralWidget(self.centralwidget)
                self.menubar = QtWidgets.QMenuBar(MainWindow)
                self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
                self.menubar.setObjectName("menubar")
                MainWindow.setMenuBar(self.menubar)
                self.statusbar = QtWidgets.QStatusBar(MainWindow)
                self.statusbar.setObjectName("statusbar")
                MainWindow.setStatusBar(self.statusbar)

                self.retranslateUi(MainWindow)
                QtCore.QMetaObject.connectSlotsByName(MainWindow)
                
                self.legendButton.clicked.connect(self.pickTheLegend)
                self.weaponButton.clicked.connect(self.pickTheLoadout)
                self.generateBoth.clicked.connect(self.PickBoth)
                
                

        def retranslateUi(self, MainWindow):
                _translate = QtCore.QCoreApplication.translate
                MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
                self.legendLabel.setText(_translate("MainWindow", "Legend"))
                self.mainLabel.setText(_translate("MainWindow", "Apex Pick Em Choose Em"))
                self.backupLegend.setText(_translate("MainWindow", "Backup Legend "))
                self.backupLegend2.setText(_translate("MainWindow", "Backup Legend  2"))
                self.weapon1.setText(_translate("MainWindow", "Weapon 1"))
                self.weapon2.setText(_translate("MainWindow", "Weapon 2"))
                self.legendButton.setText(_translate("MainWindow", "Generate Legend"))
                self.weaponButton.setText(_translate("MainWindow", "Generate Weapon"))
                self.generateBoth.setText(_translate("MainWindow", "Generate Both"))
                self.weapon2_2.setText(_translate("MainWindow", "Backup Weapon"))
        
        
        
        def pickTheLegend(self):
                plg = PickLegend()
                plg.shuffle() #shuffles the legends list 
                plg.choose_legend()
                
        def pickTheLoadout(self):
                pld = PickLoadout()
                pld.shuffle() #shuffles the loadouts list 
                pld.choose_loadout()
        
        def PickBoth(self):
                plg = PickLegend()
                plg.shuffle()
                plg.choose_legend2()
                pld = PickLoadout()
                pld.shuffle()
                pld.choose_loadout2()
                
class PickLegend():
                global legends
                legends = ["Ash", "Bangalore", "Bloodhound", "Caustic", "Crypto", "Fuse", "Gibraltar", "Horizon", "Lifeline", "Loba", "Mad Maggie", "Mirage", "Octane", "Pathfinder", "Rampart", "Revenant", "Seer","Valkyrie", "Wattson", "New Castle","Ash", "Bangalore", "Bloodhound", "Caustic", "Crypto", "Fuse", "Gibraltar", "Horizon", "Lifeline", "Loba", "Mad Maggie", "Mirage", "Octane", "Pathfinder", "Rampart", "Revenant", "Seer","Valkyrie", "Wattson", "New Castle"]#list of all the current legends, may need to be updated in the future
                
                def shuffle(self):
                        for i in range(len(legends)-1, 0, -1):
                                #pick a random index from 0 to i 
                                j = random.randint(0, i +1)
                                #swap arr[i] with the element at random index 
                                legends[i], legends[j] = legends[j], legends[i]
                        
                def choose_legend(self):
                        firstChoice = legends[0] #displays legend at index 0 in the legends list
                        secondaryChoice = legends[1]#displays legend at index 1 in the legends list
                        lastChoice = legends[2]#displays legend at index 2 in the legends list
                        
                        ui.weaponShowcase.setText(" ")
                        ui.weaponShowcase2.setText(" ")
                        ui.weaponShowcase3.setText(" ")
                        ui.legendShowcase.setText(firstChoice)
                        ui.legendShowcase_2.setText(secondaryChoice)
                        ui.legendShowcase_3.setText(lastChoice)
                        
                #the below code is to help generate both legend and loadout
                def choose_legend2(self):
                        firstChoice = legends[0] #displays legend at index 0 in the legends list
                        secondaryChoice = legends[1]#displays legend at index 1 in the legends list
                        lastChoice = legends[2]#displays legend at index 2 in the legends list
                
                        ui.legendShowcase.setText(firstChoice)
                        ui.legendShowcase_2.setText(secondaryChoice)
                        ui.legendShowcase_3.setText(lastChoice)
                        

class PickLoadout():
        global loadout
        loadout = ["Havoc Rifle", "VK-47 Flatline", "Hemlok Burst AR", "R-301 Carbine", "Alternator SMG", "Prowler Burst PDW", "R-99", "Volt SMG", "C.A.R. SMG", "Devotion LMG", "L-Star EMG", "M600 Spitfire", "Rampage LMG", "G7 Scout", "Triple Take", "30-30 Repeater", "Bocek Compund Bow", "Charge Rifle", "Longbow DMR", "Kraber .50-Cal Sniper", "Sentinel","EVA-8 Auto", "Mastiff Shotgun", "Mozambique Shotgun", "Peacekeaper", "RE-45", "P2020", "Wingman","Havoc Rifle", "VK-47 Flatline", "Hemlok Burst AR", "R-301 Carbine", "Alternator SMG", "Prowler Burst PDW", "R-99", "Volt SMG", "C.A.R. SMG", "Devotion LMG", "L-Star EMG", "M600 Spitfire", "Rampage LMG", "G7 Scout", "Triple Take", "30-30 Repeater", "Bocek Compund Bow", "Charge Rifle", "Longbow DMR", "Kraber .50-Cal Sniper", "Sentinel","EVA-8 Auto", "Mastiff Shotgun", "Mozambique Shotgun", "Peacekeaper", "RE-45", "P2020", "Wingman"] # a list of all current guns in apex legends, may need to be updated in the future 

        def shuffle(self): #Fisher-Yates shuffle method
                for i in range(len(loadout)-1,0,-1):
                        #pick a random index from 0 to i 
                        j = random.randint(0, i +1)
                        #swap arr[i] with the element at random index 
                        loadout[i], loadout[j] = loadout[j], loadout[i]
                
        def choose_loadout(self):
                primaryGun = loadout[0] #displays gun at index 0 in the loadout list
                secondaryGun = loadout[1] #displays gun at index 1 in the loaoduts list
                backupGun = loadout[2] #displays gun at index 2 in the loadouts

                ui.legendShowcase.setText(" ")
                ui.legendShowcase_2.setText(" ")
                ui.legendShowcase_3.setText(" ")
                
                ui.weaponShowcase.setText(primaryGun)
                ui.weaponShowcase2.setText(secondaryGun)
                ui.weaponShowcase3.setText(backupGun)
        #the below code is to help generate both legend and loadout
        def choose_loadout2(self):
                primaryGun = loadout[0] #displays gun at index 0 in the loadout list
                secondaryGun = loadout[1] #displays gun at index 1 in the loaoduts list
                backupGun = loadout[2] #displays gun at index 2 in the loadouts
                
                ui.weaponShowcase.setText(primaryGun)
                ui.weaponShowcase2.setText(secondaryGun)
                ui.weaponShowcase3.setText(backupGun)
        
        
        
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())